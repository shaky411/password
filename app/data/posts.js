const posts = [
  {
    id: "1",
    title: "Tackling the Tide",
    subtitle: "A Learning Session at Rest Bay",
    content:
      "Last Sunday, I found myself at one of my favorite surf spots, Rest Bay. The waves were solid—5 to 6 feet—under a good sky and with tolerable temps, all signs pointing toward a solid session. After suiting up and waxing my board, I made my way down from the car park, aware that high tide can leave little margin for error near the rocks. The tide had just turned, so I waited a while to let it drop a bit before heading in. Even then, the water still felt a touch too high for my liking.\nA few advanced surfers were already out, handling the waves confidently while a crowd gathered on the tops, with a few photographers hoping to catch some action. Standing on the slipway, I wondered whether I should hold off a bit longer or just get in and see if I could make it past the break. The idea of turning back didn’t feel like an option—not with my wetsuit on, board in hand, and the ocean calling. So, I strapped on my leash and paddled out, aiming to fly under the radar in front of the crowd. Though I’m still relatively new to surfing, I’m confident in the water and ready to face whatever comes.\nPaddling out, I could see a large set approaching, and a split-second decision was looming: either turtle roll or bail out completely. I tried to power through, but the wave came down hard, knocking me off balance. One moment I was paddling, the next, I was tossed, tangled in my leash, and pulled under, the impact feeling like a head-on collision. Dazed, I surfaced just in time to face the next wave in the set.\nAt this point, I had a choice: battle on and learn something from it or wait an extra 30 minutes for the tide to drop further. I decided to stay. Knowing the risks, I was careful to stay aware, but I wanted to push against the fear, to strengthen my skills and my confidence. I took a few more beatings but finally got myself positioned just beyond the break, catching moments between sets to adjust.\nAs the tide dropped, the conditions shifted, and suddenly I had more room between myself and the rocks. The worry over their proximity faded, replaced by excitement as my confidence grew with each wave I managed to ride. Soon, I wasn’t just surviving—I was surfing.\nAll in all, those three hours were challenging but deeply rewarding. The experience taught me a lot about timing, positioning, and reading the conditions more closely. Next time, I’ll wait a bit longer until the tide drops to avoid getting thrashed right out of the gate, but it’s these sessions that push me to be a better surfer. Every wave, whether it hits or I ride it, gets me closer to that goal.",
    date: "19-10-2024",
    category: "surf",
    image: "/assets/post_1.jpg",
    image_details: "iPhone 15 Pro - Moment 1.33x Anamorphic Lens",
    author: "Marc Norris",
    reading_time: "3 min read",
  },
  {
    id: "2",
    title: "NextJs",
    subtitle: "Why I Love Building Websites with Next.js",
    content: "In the world of web development, there are countless frameworks to choose from, but for me, Next.js stands out as the ultimate choice for building modern, fast, and scalable websites. Here’s why I find myself reaching for Next.js time and time again.\n1. Blazing Fast Performance Out of the Box\nOne of Next.js’s biggest strengths is its performance optimization. By default, it offers server-side rendering (SSR) and static site generation (SSG), allowing pages to load instantly. This mix of SSR and SSG lets me build fast, dynamic sites without the performance penalties that sometimes come with client-side rendering alone. Plus, automatic code splitting ensures users only load what they need, further enhancing speed.\n2. Built-In Routing System\nThe file-based routing in Next.js simplifies navigation in a way that's intuitive and fast. Instead of configuring a routing library manually, I can just drop files into the pages directory, and Next.js automatically creates the routes for me. Nested routes and dynamic routing are just as simple, allowing me to keep my code organized and my development process efficient.\n3. Flexibility with API Routes\nNext.js isn’t just for frontend work—it also provides API routes, which means I can create backend functionality directly within the same codebase. I can quickly add features like authentication or server-side form handling without needing a separate backend framework. This makes it ideal for full-stack projects, where I need both frontend and backend components to work seamlessly together.\n4. SEO Friendliness\nSEO is a huge priority for many websites, and Next.js makes it easy to build search-engine-friendly pages. Server-side rendering ensures that search engines can crawl and index my content, while dynamic meta tags and Open Graph support give me complete control over how pages are displayed in search results and on social media. This has been a game-changer for projects where visibility is key.\n5. Great Developer Experience\nNext.js makes development enjoyable by offering fast refresh, which gives instant feedback as I code, and TypeScript support out of the box, which helps me catch errors early and ensures more robust code. The framework is also actively maintained by Vercel, which means there are always new features, improvements, and an engaged community ready to help with questions.\n6. Scalable and Ready for Production\nWhether it’s a personal project or a high-traffic application, Next.js scales effortlessly. Vercel’s hosting solution pairs seamlessly with Next.js, making it easy to deploy projects with a single command. Plus, features like incremental static regeneration (ISR) allow me to update static pages without having to rebuild the entire site, ensuring that I can scale up as needed without compromising performance.\nFinal Thoughts\nIn short, Next.js is my go-to framework because it combines performance, flexibility, and a fantastic developer experience. It’s powerful enough for large projects yet intuitive enough for smaller ones, making it perfect for building everything from simple websites to complex applications. If you haven’t tried it yet, I highly recommend giving Next.js a go—it might just become your favorite, too!",
    date: "28-10-2024",
    category: "tech",
    image: "/assets/next_blog_1.jpg",
    image_details: "n/a",
    author: "Marc Norris",
    reading_time: "3 min read",
  },
  {
    id: "3",
    title: "Mechanical Keyboards",
    subtitle: "My First Foray into the World of Mechanical Keyboards",
    content: "Until recently, I’d always relied on an Apple Magic Keyboard or my MacBook’s built-in keyboard. Apple’s keyboards have always been solid, comfortable, and reliable, so I never felt the need to replace them. They’ve done everything I needed right out of the box.\nBut as I’ve been diving deeper into coding, I started wondering if a mechanical keyboard could improve my typing experience. Mechanical keyboards, from the outside, always seemed a bit overwhelming to me. There are different styles of keycaps, like Cherry and XDA; a vast array of switches with varied pressure levels and noise profiles; and a whole suite of customization options, like RGB backlighting (which I love), Bluetooth or wired connectivity, and even customization mods. People talk about everything from taping and foam mods to reduce sound to applying lube to the mechanisms to enhance feel and acoustics.\nThese were things I’d never had to consider, given that my trusty Apple keyboards came ready to go. But my curiosity got the better of me, and I decided to dip my toes into this unfamiliar yet intriguing world of mechanical keyboards.\nAfter some research, I decided to keep things simple and go for a low-profile mechanical keyboard called the Air75 V2 in 'ionic white,' made by NuPhy. Its minimalist, modern design immediately drew me in, and it’s only slightly larger than my Magic Keyboard—a huge plus for me. NuPhy’s polished marketing also played a big role in my decision; they made the Air75 look as sleek as it sounds.\nFor the switches, I went with the stock brown switches. After a little digging, I found out that brown switches are a popular middle-ground option: not too soft, not too firm, and with a pleasant, moderate sound level. Sound wasn’t a huge concern since I work remotely, but I do tend to work late at night, and my office is right next to my children’s room, so I wanted something that wouldn’t disturb them.\nNow, after just a couple of weeks with the Air75, I’m happy to report that my “switch” (pun intended) to the world of mechanical keyboards has been overwhelmingly positive. The responsiveness, the tactile feedback, and even the satisfying sound make typing genuinely enjoyable compared to a standard keyboard. While there’s a slight adjustment period, I’m already noticing a difference in comfort and typing speed.\nFor anyone who’s been on the fence about mechanical keyboards or hasn’t considered them at all, I can wholeheartedly recommend trying one—especially if you spend a lot of time typing. You don’t have to get swept up in all the technical details to enjoy the benefits. For me, this board has proved that the experience doesn’t need to be complicated to be worthwhile.",
    date: "28-10-2024",
    category: "tech",
    image: "/assets/air75.jpg",
    image_details: "n/a",
    author: "Marc Norris",
    reading_time: "3 min read",
  },
];

export default posts;


